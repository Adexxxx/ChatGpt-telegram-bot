import sqlite3

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import Message
from ChatGPT import gpt

TOKEN = "6529393206:AAGiq3RTgwbf7_pk1nK45TVkgo_i14qXEZY"
bot = Bot(TOKEN)
dp = Dispatcher(bot)


def create_table():
    """–°–æ–∑–¥–∞—ë–º –±–¥, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç"""

    connect = sqlite3.connect("gpt_us.db", check_same_thread=False)
    cursor = connect.cursor()

    cursor.execute("""CREATE TABLE IF NOT EXISTS ChatGPT (
                    id INT,
                    con TEXT,
                    con2 TEXT
                    )""")
    connect.commit()
    connect.close()


@dp.message_handler(commands="start")
async def start(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""

    connect = sqlite3.connect("gpt_us.db", check_same_thread=False)
    cursor = connect.cursor()

    cursor.execute("SELECT * FROM ChatGPT WHERE id = ?", (message.from_user.id,))
    user = cursor.fetchone()
    if not user:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –≤ –±–¥. –î–æ–±–∞–≤–ª—è–µ–º
        cursor.execute(
            "INSERT INTO ChatGPT VALUES (?, ?, ?)", (message.from_user.id, "", "")
        )

    await message.answer("–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —á–∞—Ç-–±–æ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–æ–¥–µ–ª–∏ gpt 3.5üî•\n–ü—Ä–∏—Å—Ç—É–ø–∏–º!")  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º

    connect.commit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–¥
    connect.close()


@dp.message_handler(commands="reset")
async def reset(message: Message) -> None:
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ –±–¥"""

    connect = sqlite3.connect("gpt_us.db", check_same_thread=False)
    cursor = connect.cursor()
    cursor.execute(
        "UPDATE ChatGPT SET con = ?, con2 = ? WHERE id = ?",
        ("", "", message.from_user.id)
    )
    cursor.fetchone()
    connect.commit()
    connect.close()

    await message.answer("‚úÖ–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—Ç—á–∏—â–µ–Ω–∞‚úÖ")


@dp.message_handler(content_types=types.ContentType.TEXT)
async def mes(message: types.Message) -> None:
    msg_accept = await message.answer(text="–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç‚ôªÔ∏è")
    gpt_answer = await gpt(text=message.text, user_id=message.from_user.id)
    if not gpt_answer:
        await msg_accept.edit_text(
            text="‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥"
        )
        return
    await msg_accept.delete()
    await message.answer(text=gpt_answer)


if __name__ == "__main__":
    create_table()
    executor.start_polling(dp)
